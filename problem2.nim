# Each new term in the Fibonacci sequence
# is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence
# whose values do not exceed four million, find the sum
# of the even-valued terms.
proc fib(n: int): int =
  if n == 1 or n == 2:
    result = 1
  else:
    result = fib(n-1) + fib(n-2)

proc evenFibSum(n: int, sum: int): int =
  let res = fib(n)
  if res %% 2 == 0:
    result = evenFibSum(n + 1, sum + res)
  elif res > 4000000:
    result = sum
  else:
    result = evenFibSum(n + 1, sum)

proc run*(): int =
  result = evenFibSum(1, 0)